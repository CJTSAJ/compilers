State 1 conflicts: 1 shift/reduce
State 31 conflicts: 1 shift/reduce
State 34 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | voidexp
    4    | INT
    5    | STRING
    6    | ID LPAREN args RPAREN
    7    | ID LPAREN RPAREN
    8    | MINUS exp
    9    | exp PLUS exp
   10    | exp MINUS exp
   11    | exp TIMES exp
   12    | exp DIVIDE exp
   13    | exp EQ exp
   14    | exp NEQ exp
   15    | exp LT exp
   16    | exp LE exp
   17    | exp GT exp
   18    | exp GE exp
   19    | exp AND exp
   20    | exp OR exp
   21    | ID LBRACE recorditems RBRACE
   22    | ID LBRACE RBRACE
   23    | LPAREN seqexp RPAREN
   24    | LPAREN error RPAREN
   25    | LPAREN RPAREN
   26    | lvalue ASSIGN exp
   27    | IF exp THEN exp
   28    | IF exp THEN exp ELSE exp
   29    | WHILE exp DO exp
   30    | FOR ID ASSIGN exp TO exp DO exp
   31    | BREAK
   32    | LET decs IN seqexp END
   33    | ID LBRACK exp RBRACK OF exp

   34 exps: exp
   35     | exp SEMICOLON exps

   36 seqexp: exps

   37 recorditem: ID EQ exp

   38 recorditems: recorditem
   39            | recorditem COMMA recorditems

   40 voidexp: NIL

   41 args: exp
   42     | exp COMMA args

   43 tyfield: ID COLON ID

   44 tyfields: %empty
   45         | tyfield
   46         | tyfield COMMA tyfields

   47 ty: ID
   48   | LBRACE tyfields RBRACE
   49   | ARRAY OF ID

   50 tydec: TYPE ID EQ ty

   51 tydecs: tydec
   52       | tydec tydecs

   53 vardec: VAR ID ASSIGN exp
   54       | VAR ID COLON ID ASSIGN exp

   55 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   56       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   57 fundecs: fundec
   58        | fundec fundecs

   59 dec: tydecs
   60    | vardec
   61    | fundecs

   62 decs: %empty
   63     | dec decs

   64 lvalue: ID
   65       | lvalue DOT ID
   66       | lvalue LBRACK exp RBRACK
   67       | ID LBRACK exp RBRACK


Terminals, with rules where they appear

$end (0) 0
error (256) 24
ID (258) 6 7 21 22 30 33 37 43 47 49 50 53 54 55 56 64 65 67
STRING (259) 5
INT (260) 4
COMMA (261) 39 42 46
COLON (262) 43 54 56
SEMICOLON (263) 35
LPAREN (264) 6 7 23 24 25 55 56
RPAREN (265) 6 7 23 24 25 55 56
LBRACK (266) 33 66 67
RBRACK (267) 33 66 67
LBRACE (268) 21 22 48
RBRACE (269) 21 22 48
DOT (270) 65
PLUS (271) 9
MINUS (272) 8 10
TIMES (273) 11
DIVIDE (274) 12
EQ (275) 13 37 50 55 56
NEQ (276) 14
LT (277) 15
LE (278) 16
GT (279) 17
GE (280) 18
AND (281) 19
OR (282) 20
ASSIGN (283) 26 30 53 54
ARRAY (284) 49
IF (285) 27 28
THEN (286) 27 28
ELSE (287) 28
WHILE (288) 29
FOR (289) 30
TO (290) 30
DO (291) 29 30
LET (292) 32
IN (293) 32
END (294) 32
OF (295) 33 49
BREAK (296) 31
NIL (297) 40
FUNCTION (298) 55 56
VAR (299) 53 54
TYPE (300) 50
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31 32 33, on right: 1 8 9 10 11 12 13 14
    15 16 17 18 19 20 26 27 28 29 30 33 34 35 37 41 42 53 54 55 56
    66 67
exps (50)
    on left: 34 35, on right: 35 36
seqexp (51)
    on left: 36, on right: 23 32
recorditem (52)
    on left: 37, on right: 38 39
recorditems (53)
    on left: 38 39, on right: 21 39
voidexp (54)
    on left: 40, on right: 3
args (55)
    on left: 41 42, on right: 6 42
tyfield (56)
    on left: 43, on right: 45 46
tyfields (57)
    on left: 44 45 46, on right: 46 48 55 56
ty (58)
    on left: 47 48 49, on right: 50
tydec (59)
    on left: 50, on right: 51 52
tydecs (60)
    on left: 51 52, on right: 52 59
vardec (61)
    on left: 53 54, on right: 60
fundec (62)
    on left: 55 56, on right: 57 58
fundecs (63)
    on left: 57 58, on right: 58 61
dec (64)
    on left: 59 60 61, on right: 63
decs (65)
    on left: 62 63, on right: 32 63
lvalue (66)
    on left: 64 65 66 67, on right: 2 26 65 66


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    voidexp  go to state 14
    lvalue   go to state 15


State 1

    6 exp: ID . LPAREN args RPAREN
    7    | ID . LPAREN RPAREN
   21    | ID . LBRACE recorditems RBRACE
   22    | ID . LBRACE RBRACE
   33    | ID . LBRACK exp RBRACK OF exp
   64 lvalue: ID .
   67       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 16
    LBRACK  shift, and go to state 17
    LBRACE  shift, and go to state 18

    LBRACK    [reduce using rule 64 (lvalue)]
    $default  reduce using rule 64 (lvalue)


State 2

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


State 3

    4 exp: INT .

    $default  reduce using rule 4 (exp)


State 4

   23 exp: LPAREN . seqexp RPAREN
   24    | LPAREN . error RPAREN
   25    | LPAREN . RPAREN

    error   shift, and go to state 19
    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 20
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 21
    exps     go to state 22
    seqexp   go to state 23
    voidexp  go to state 14
    lvalue   go to state 15


State 5

    8 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 24
    voidexp  go to state 14
    lvalue   go to state 15


State 6

   27 exp: IF . exp THEN exp
   28    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 25
    voidexp  go to state 14
    lvalue   go to state 15


State 7

   29 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 26
    voidexp  go to state 14
    lvalue   go to state 15


State 8

   30 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 27


State 9

   32 exp: LET . decs IN seqexp END

    FUNCTION  shift, and go to state 28
    VAR       shift, and go to state 29
    TYPE      shift, and go to state 30

    $default  reduce using rule 62 (decs)

    tydec    go to state 31
    tydecs   go to state 32
    vardec   go to state 33
    fundec   go to state 34
    fundecs  go to state 35
    dec      go to state 36
    decs     go to state 37


State 10

   31 exp: BREAK .

    $default  reduce using rule 31 (exp)


State 11

   40 voidexp: NIL .

    $default  reduce using rule 40 (voidexp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 38


State 13

    1 program: exp .
    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 1 (program)


State 14

    3 exp: voidexp .

    $default  reduce using rule 3 (exp)


State 15

    2 exp: lvalue .
   26    | lvalue . ASSIGN exp
   65 lvalue: lvalue . DOT ID
   66       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 51
    DOT     shift, and go to state 52
    ASSIGN  shift, and go to state 53

    $default  reduce using rule 2 (exp)


State 16

    6 exp: ID LPAREN . args RPAREN
    7    | ID LPAREN . RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 54
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 55
    voidexp  go to state 14
    args     go to state 56
    lvalue   go to state 15


State 17

   33 exp: ID LBRACK . exp RBRACK OF exp
   67 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 57
    voidexp  go to state 14
    lvalue   go to state 15


State 18

   21 exp: ID LBRACE . recorditems RBRACE
   22    | ID LBRACE . RBRACE

    ID      shift, and go to state 58
    RBRACE  shift, and go to state 59

    recorditem   go to state 60
    recorditems  go to state 61


State 19

   24 exp: LPAREN error . RPAREN

    RPAREN  shift, and go to state 62


State 20

   25 exp: LPAREN RPAREN .

    $default  reduce using rule 25 (exp)


State 21

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   34 exps: exp .
   35     | exp . SEMICOLON exps

    SEMICOLON  shift, and go to state 63
    PLUS       shift, and go to state 39
    MINUS      shift, and go to state 40
    TIMES      shift, and go to state 41
    DIVIDE     shift, and go to state 42
    EQ         shift, and go to state 43
    NEQ        shift, and go to state 44
    LT         shift, and go to state 45
    LE         shift, and go to state 46
    GT         shift, and go to state 47
    GE         shift, and go to state 48
    AND        shift, and go to state 49
    OR         shift, and go to state 50

    $default  reduce using rule 34 (exps)


State 22

   36 seqexp: exps .

    $default  reduce using rule 36 (seqexp)


State 23

   23 exp: LPAREN seqexp . RPAREN

    RPAREN  shift, and go to state 64


State 24

    8 exp: MINUS exp .
    9    | exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    $default  reduce using rule 8 (exp)


State 25

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   27    | IF exp . THEN exp
   28    | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    THEN    shift, and go to state 65


State 26

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   29    | WHILE exp . DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    DO      shift, and go to state 66


State 27

   30 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 67


State 28

   55 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   56       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 68


State 29

   53 vardec: VAR . ID ASSIGN exp
   54       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 69


State 30

   50 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 70


State 31

   51 tydecs: tydec .
   52       | tydec . tydecs

    TYPE  shift, and go to state 30

    TYPE      [reduce using rule 51 (tydecs)]
    $default  reduce using rule 51 (tydecs)

    tydec   go to state 31
    tydecs  go to state 71


State 32

   59 dec: tydecs .

    $default  reduce using rule 59 (dec)


State 33

   60 dec: vardec .

    $default  reduce using rule 60 (dec)


State 34

   57 fundecs: fundec .
   58        | fundec . fundecs

    FUNCTION  shift, and go to state 28

    FUNCTION  [reduce using rule 57 (fundecs)]
    $default  reduce using rule 57 (fundecs)

    fundec   go to state 34
    fundecs  go to state 72


State 35

   61 dec: fundecs .

    $default  reduce using rule 61 (dec)


State 36

   63 decs: dec . decs

    FUNCTION  shift, and go to state 28
    VAR       shift, and go to state 29
    TYPE      shift, and go to state 30

    $default  reduce using rule 62 (decs)

    tydec    go to state 31
    tydecs   go to state 32
    vardec   go to state 33
    fundec   go to state 34
    fundecs  go to state 35
    dec      go to state 36
    decs     go to state 73


State 37

   32 exp: LET decs . IN seqexp END

    IN  shift, and go to state 74


State 38

    0 $accept: program $end .

    $default  accept


State 39

    9 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 75
    voidexp  go to state 14
    lvalue   go to state 15


State 40

   10 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 76
    voidexp  go to state 14
    lvalue   go to state 15


State 41

   11 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 77
    voidexp  go to state 14
    lvalue   go to state 15


State 42

   12 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 78
    voidexp  go to state 14
    lvalue   go to state 15


State 43

   13 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 79
    voidexp  go to state 14
    lvalue   go to state 15


State 44

   14 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 80
    voidexp  go to state 14
    lvalue   go to state 15


State 45

   15 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 81
    voidexp  go to state 14
    lvalue   go to state 15


State 46

   16 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 82
    voidexp  go to state 14
    lvalue   go to state 15


State 47

   17 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 83
    voidexp  go to state 14
    lvalue   go to state 15


State 48

   18 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 84
    voidexp  go to state 14
    lvalue   go to state 15


State 49

   19 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 85
    voidexp  go to state 14
    lvalue   go to state 15


State 50

   20 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 86
    voidexp  go to state 14
    lvalue   go to state 15


State 51

   66 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 87
    voidexp  go to state 14
    lvalue   go to state 15


State 52

   65 lvalue: lvalue DOT . ID

    ID  shift, and go to state 88


State 53

   26 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 89
    voidexp  go to state 14
    lvalue   go to state 15


State 54

    7 exp: ID LPAREN RPAREN .

    $default  reduce using rule 7 (exp)


State 55

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   41 args: exp .
   42     | exp . COMMA args

    COMMA   shift, and go to state 90
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 41 (args)


State 56

    6 exp: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 91


State 57

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   33    | ID LBRACK exp . RBRACK OF exp
   67 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 92
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 58

   37 recorditem: ID . EQ exp

    EQ  shift, and go to state 93


State 59

   22 exp: ID LBRACE RBRACE .

    $default  reduce using rule 22 (exp)


State 60

   38 recorditems: recorditem .
   39            | recorditem . COMMA recorditems

    COMMA  shift, and go to state 94

    $default  reduce using rule 38 (recorditems)


State 61

   21 exp: ID LBRACE recorditems . RBRACE

    RBRACE  shift, and go to state 95


State 62

   24 exp: LPAREN error RPAREN .

    $default  reduce using rule 24 (exp)


State 63

   35 exps: exp SEMICOLON . exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 21
    exps     go to state 96
    voidexp  go to state 14
    lvalue   go to state 15


State 64

   23 exp: LPAREN seqexp RPAREN .

    $default  reduce using rule 23 (exp)


State 65

   27 exp: IF exp THEN . exp
   28    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 97
    voidexp  go to state 14
    lvalue   go to state 15


State 66

   29 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 98
    voidexp  go to state 14
    lvalue   go to state 15


State 67

   30 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 99
    voidexp  go to state 14
    lvalue   go to state 15


State 68

   55 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   56       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 100


State 69

   53 vardec: VAR ID . ASSIGN exp
   54       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 101
    ASSIGN  shift, and go to state 102


State 70

   50 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 103


State 71

   52 tydecs: tydec tydecs .

    $default  reduce using rule 52 (tydecs)


State 72

   58 fundecs: fundec fundecs .

    $default  reduce using rule 58 (fundecs)


State 73

   63 decs: dec decs .

    $default  reduce using rule 63 (decs)


State 74

   32 exp: LET decs IN . seqexp END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 21
    exps     go to state 22
    seqexp   go to state 104
    voidexp  go to state 14
    lvalue   go to state 15


State 75

    9 exp: exp . PLUS exp
    9    | exp PLUS exp .
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    $default  reduce using rule 9 (exp)


State 76

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   10    | exp MINUS exp .
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    $default  reduce using rule 10 (exp)


State 77

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   11    | exp TIMES exp .
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    $default  reduce using rule 11 (exp)


State 78

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   12    | exp DIVIDE exp .
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    $default  reduce using rule 12 (exp)


State 79

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   13    | exp EQ exp .
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 13 (exp)


State 80

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   14    | exp NEQ exp .
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


State 81

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   15    | exp LT exp .
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


State 82

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   16    | exp LE exp .
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


State 83

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   17    | exp GT exp .
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


State 84

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   18    | exp GE exp .
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


State 85

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   19    | exp AND exp .
   20    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48

    $default  reduce using rule 19 (exp)


State 86

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   20    | exp OR exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49

    $default  reduce using rule 20 (exp)


State 87

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   66 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 105
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 88

   65 lvalue: lvalue DOT ID .

    $default  reduce using rule 65 (lvalue)


State 89

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   26    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 26 (exp)


State 90

   42 args: exp COMMA . args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 55
    voidexp  go to state 14
    args     go to state 106
    lvalue   go to state 15


State 91

    6 exp: ID LPAREN args RPAREN .

    $default  reduce using rule 6 (exp)


State 92

   33 exp: ID LBRACK exp RBRACK . OF exp
   67 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 107

    $default  reduce using rule 67 (lvalue)


State 93

   37 recorditem: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 108
    voidexp  go to state 14
    lvalue   go to state 15


State 94

   39 recorditems: recorditem COMMA . recorditems

    ID  shift, and go to state 58

    recorditem   go to state 60
    recorditems  go to state 109


State 95

   21 exp: ID LBRACE recorditems RBRACE .

    $default  reduce using rule 21 (exp)


State 96

   35 exps: exp SEMICOLON exps .

    $default  reduce using rule 35 (exps)


State 97

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   27    | IF exp THEN exp .
   28    | IF exp THEN exp . ELSE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    ELSE    shift, and go to state 110

    $default  reduce using rule 27 (exp)


State 98

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   29    | WHILE exp DO exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 29 (exp)


State 99

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   30    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    TO      shift, and go to state 111


State 100

   55 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   56       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 112

    $default  reduce using rule 44 (tyfields)

    tyfield   go to state 113
    tyfields  go to state 114


State 101

   54 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 115


State 102

   53 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 116
    voidexp  go to state 14
    lvalue   go to state 15


State 103

   50 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 117
    LBRACE  shift, and go to state 118
    ARRAY   shift, and go to state 119

    ty  go to state 120


State 104

   32 exp: LET decs IN seqexp . END

    END  shift, and go to state 121


State 105

   66 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 66 (lvalue)


State 106

   42 args: exp COMMA args .

    $default  reduce using rule 42 (args)


State 107

   33 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 122
    voidexp  go to state 14
    lvalue   go to state 15


State 108

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   37 recorditem: ID EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 37 (recorditem)


State 109

   39 recorditems: recorditem COMMA recorditems .

    $default  reduce using rule 39 (recorditems)


State 110

   28 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 123
    voidexp  go to state 14
    lvalue   go to state 15


State 111

   30 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 124
    voidexp  go to state 14
    lvalue   go to state 15


State 112

   43 tyfield: ID . COLON ID

    COLON  shift, and go to state 125


State 113

   45 tyfields: tyfield .
   46         | tyfield . COMMA tyfields

    COMMA  shift, and go to state 126

    $default  reduce using rule 45 (tyfields)


State 114

   55 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   56       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 127


State 115

   54 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 128


State 116

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   53 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 53 (vardec)


State 117

   47 ty: ID .

    $default  reduce using rule 47 (ty)


State 118

   48 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 112

    $default  reduce using rule 44 (tyfields)

    tyfield   go to state 113
    tyfields  go to state 129


State 119

   49 ty: ARRAY . OF ID

    OF  shift, and go to state 130


State 120

   50 tydec: TYPE ID EQ ty .

    $default  reduce using rule 50 (tydec)


State 121

   32 exp: LET decs IN seqexp END .

    $default  reduce using rule 32 (exp)


State 122

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   33    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 33 (exp)


State 123

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   28    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 28 (exp)


State 124

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   30    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    DO      shift, and go to state 131


State 125

   43 tyfield: ID COLON . ID

    ID  shift, and go to state 132


State 126

   46 tyfields: tyfield COMMA . tyfields

    ID  shift, and go to state 112

    $default  reduce using rule 44 (tyfields)

    tyfield   go to state 113
    tyfields  go to state 133


State 127

   55 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   56       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 134
    EQ     shift, and go to state 135


State 128

   54 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 136
    voidexp  go to state 14
    lvalue   go to state 15


State 129

   48 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 137


State 130

   49 ty: ARRAY OF . ID

    ID  shift, and go to state 138


State 131

   30 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 139
    voidexp  go to state 14
    lvalue   go to state 15


State 132

   43 tyfield: ID COLON ID .

    $default  reduce using rule 43 (tyfield)


State 133

   46 tyfields: tyfield COMMA tyfields .

    $default  reduce using rule 46 (tyfields)


State 134

   56 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 140


State 135

   55 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 141
    voidexp  go to state 14
    lvalue   go to state 15


State 136

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   54 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 54 (vardec)


State 137

   48 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 48 (ty)


State 138

   49 ty: ARRAY OF ID .

    $default  reduce using rule 49 (ty)


State 139

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   30    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 30 (exp)


State 140

   56 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 142


State 141

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   55 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 55 (fundec)


State 142

   56 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 143
    voidexp  go to state 14
    lvalue   go to state 15


State 143

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   56 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 56 (fundec)

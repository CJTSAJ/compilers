State 1 conflicts: 2 shift/reduce
State 34 conflicts: 1 shift/reduce
State 36 conflicts: 1 shift/reduce
State 88 conflicts: 12 shift/reduce
State 99 conflicts: 13 shift/reduce
State 100 conflicts: 12 shift/reduce
State 126 conflicts: 12 shift/reduce
State 128 conflicts: 12 shift/reduce
State 142 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | INT
    5    | STRING
    6    | ID LPAREN actuals RPAREN
    7    | exp PLUS exp
    8    | exp MINUS exp
    9    | exp TIMES exp
   10    | exp DIVIDE exp
   11    | exp EQ exp
   12    | exp NEQ exp
   13    | exp LT exp
   14    | exp LE exp
   15    | exp GT exp
   16    | exp GE exp
   17    | exp AND exp
   18    | exp OR exp
   19    | MINUS exp
   20    | ID LBRACE rec RBRACE
   21    | LPAREN sequencing RPAREN
   22    | lvalue ASSIGN exp
   23    | IF exp THEN exp
   24    | IF exp THEN exp ELSE exp
   25    | WHILE exp DO exp
   26    | FOR ID ASSIGN exp TO exp DO exp
   27    | BREAK
   28    | LET decs IN expseq END
   29    | ID LBRACK exp RBRACK OF exp
   30    | LPAREN exp RPAREN

   31 expseq: sequencing_exps

   32 actuals: %empty
   33        | nonemptyactuals

   34 nonemptyactuals: exp
   35                | exp COMMA nonemptyactuals

   36 sequencing: exp SEMICOLON sequencing_exps

   37 sequencing_exps: exp
   38                | exp SEMICOLON sequencing_exps
   39                | %empty

   40 lvalue: oneormore

   41 oneormore: one
   42          | oneormore DOT ID
   43          | oneormore LBRACK exp RBRACK

   44 one: ID
   45    | ID DOT ID
   46    | ID LBRACK exp RBRACK

   47 decs: %empty
   48     | decs_nonempty

   49 decs_nonempty: decs_nonempty_s decs

   50 decs_nonempty_s: tydec
   51                | vardec
   52                | fundec

   53 vardec: VAR ID ASSIGN exp
   54       | VAR ID COLON ID ASSIGN exp

   55 rec: %empty
   56    | rec_nonempty

   57 rec_nonempty: rec_one
   58             | rec_one COMMA rec_nonempty

   59 rec_one: ID EQ exp

   60 tydec: tydec_one
   61      | tydec_one tydec

   62 tydec_one: TYPE ID EQ ty

   63 tyfields: %empty
   64         | tyfields_nonempty

   65 tyfields_nonempty: ID COLON ID
   66                  | ID COLON ID COMMA tyfields_nonempty

   67 ty: ID
   68   | LBRACE tyfields RBRACE
   69   | ARRAY OF ID

   70 fundec: fundec_one
   71       | fundec_one fundec

   72 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   73           | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 6 20 26 29 42 44 45 46 53 54 59 62 65 66 67 69 72 73
STRING (259) 5
INT (260) 4
COMMA (261) 35 58 66
COLON (262) 54 65 66 73
SEMICOLON (263) 36 38
LPAREN (264) 6 21 30 72 73
RPAREN (265) 6 21 30 72 73
LBRACK (266) 29 43 46
RBRACK (267) 29 43 46
LBRACE (268) 20 68
RBRACE (269) 20 68
DOT (270) 42 45
ASSIGN (271) 22 26 53 54
ARRAY (272) 69
IF (273) 23 24
THEN (274) 23 24
ELSE (275) 24
WHILE (276) 25
FOR (277) 26
TO (278) 26
DO (279) 25 26
LET (280) 28
IN (281) 28
END (282) 28
OF (283) 29 69
BREAK (284) 27
NIL (285) 3
FUNCTION (286) 72 73
VAR (287) 53 54
TYPE (288) 62
AND (289) 17
OR (290) 18
EQ (291) 11 59 62 72 73
NEQ (292) 12
LT (293) 13
LE (294) 14
GT (295) 15
GE (296) 16
PLUS (297) 7
MINUS (298) 8 19
TIMES (299) 9
DIVIDE (300) 10
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30, on right: 1 7 8 9 10 11 12 13 14 15 16
    17 18 19 22 23 24 25 26 29 30 34 35 36 37 38 43 46 53 54 59 72
    73
expseq (50)
    on left: 31, on right: 28
actuals (51)
    on left: 32 33, on right: 6
nonemptyactuals (52)
    on left: 34 35, on right: 33 35
sequencing (53)
    on left: 36, on right: 21
sequencing_exps (54)
    on left: 37 38 39, on right: 31 36 38
lvalue (55)
    on left: 40, on right: 2 22
oneormore (56)
    on left: 41 42 43, on right: 40 42 43
one (57)
    on left: 44 45 46, on right: 41
decs (58)
    on left: 47 48, on right: 28 49
decs_nonempty (59)
    on left: 49, on right: 48
decs_nonempty_s (60)
    on left: 50 51 52, on right: 49
vardec (61)
    on left: 53 54, on right: 51
rec (62)
    on left: 55 56, on right: 20
rec_nonempty (63)
    on left: 57 58, on right: 56 58
rec_one (64)
    on left: 59, on right: 57 58
tydec (65)
    on left: 60 61, on right: 50 61
tydec_one (66)
    on left: 62, on right: 60 61
tyfields (67)
    on left: 63 64, on right: 68 72 73
tyfields_nonempty (68)
    on left: 65 66, on right: 64 66
ty (69)
    on left: 67 68 69, on right: 62
fundec (70)
    on left: 70 71, on right: 52 71
fundec_one (71)
    on left: 72 73, on right: 70 71


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    program    go to state 12
    exp        go to state 13
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 1

    6 exp: ID . LPAREN actuals RPAREN
   20    | ID . LBRACE rec RBRACE
   29    | ID . LBRACK exp RBRACK OF exp
   44 one: ID .
   45    | ID . DOT ID
   46    | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 17
    LBRACK  shift, and go to state 18
    LBRACE  shift, and go to state 19
    DOT     shift, and go to state 20

    LBRACK    [reduce using rule 44 (one)]
    DOT       [reduce using rule 44 (one)]
    $default  reduce using rule 44 (one)


State 2

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


State 3

    4 exp: INT .

    $default  reduce using rule 4 (exp)


State 4

   21 exp: LPAREN . sequencing RPAREN
   30    | LPAREN . exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp         go to state 21
    sequencing  go to state 22
    lvalue      go to state 14
    oneormore   go to state 15
    one         go to state 16


State 5

   23 exp: IF . exp THEN exp
   24    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 23
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 6

   25 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 24
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 7

   26 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 25


State 8

   28 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 47 (decs)

    decs             go to state 29
    decs_nonempty    go to state 30
    decs_nonempty_s  go to state 31
    vardec           go to state 32
    tydec            go to state 33
    tydec_one        go to state 34
    fundec           go to state 35
    fundec_one       go to state 36


State 9

   27 exp: BREAK .

    $default  reduce using rule 27 (exp)


State 10

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


State 11

   19 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 37
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 12

    0 $accept: program . $end

    $end  shift, and go to state 38


State 13

    1 program: exp .
    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp

    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    $default  reduce using rule 1 (program)


State 14

    2 exp: lvalue .
   22    | lvalue . ASSIGN exp

    ASSIGN  shift, and go to state 51

    $default  reduce using rule 2 (exp)


State 15

   40 lvalue: oneormore .
   42 oneormore: oneormore . DOT ID
   43          | oneormore . LBRACK exp RBRACK

    LBRACK  shift, and go to state 52
    DOT     shift, and go to state 53

    $default  reduce using rule 40 (lvalue)


State 16

   41 oneormore: one .

    $default  reduce using rule 41 (oneormore)


State 17

    6 exp: ID LPAREN . actuals RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    $default  reduce using rule 32 (actuals)

    exp              go to state 54
    actuals          go to state 55
    nonemptyactuals  go to state 56
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16


State 18

   29 exp: ID LBRACK . exp RBRACK OF exp
   46 one: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 57
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 19

   20 exp: ID LBRACE . rec RBRACE

    ID  shift, and go to state 58

    $default  reduce using rule 55 (rec)

    rec           go to state 59
    rec_nonempty  go to state 60
    rec_one       go to state 61


State 20

   45 one: ID DOT . ID

    ID  shift, and go to state 62


State 21

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   30    | LPAREN exp . RPAREN
   36 sequencing: exp . SEMICOLON sequencing_exps

    SEMICOLON  shift, and go to state 63
    RPAREN     shift, and go to state 64
    AND        shift, and go to state 39
    OR         shift, and go to state 40
    EQ         shift, and go to state 41
    NEQ        shift, and go to state 42
    LT         shift, and go to state 43
    LE         shift, and go to state 44
    GT         shift, and go to state 45
    GE         shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    TIMES      shift, and go to state 49
    DIVIDE     shift, and go to state 50


State 22

   21 exp: LPAREN sequencing . RPAREN

    RPAREN  shift, and go to state 65


State 23

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   23    | IF exp . THEN exp
   24    | IF exp . THEN exp ELSE exp

    THEN    shift, and go to state 66
    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50


State 24

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   25    | WHILE exp . DO exp

    DO      shift, and go to state 67
    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50


State 25

   26 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 68


State 26

   72 fundec_one: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   73           | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 69


State 27

   53 vardec: VAR . ID ASSIGN exp
   54       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 70


State 28

   62 tydec_one: TYPE . ID EQ ty

    ID  shift, and go to state 71


State 29

   28 exp: LET decs . IN expseq END

    IN  shift, and go to state 72


State 30

   48 decs: decs_nonempty .

    $default  reduce using rule 48 (decs)


State 31

   49 decs_nonempty: decs_nonempty_s . decs

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 47 (decs)

    decs             go to state 73
    decs_nonempty    go to state 30
    decs_nonempty_s  go to state 31
    vardec           go to state 32
    tydec            go to state 33
    tydec_one        go to state 34
    fundec           go to state 35
    fundec_one       go to state 36


State 32

   51 decs_nonempty_s: vardec .

    $default  reduce using rule 51 (decs_nonempty_s)


State 33

   50 decs_nonempty_s: tydec .

    $default  reduce using rule 50 (decs_nonempty_s)


State 34

   60 tydec: tydec_one .
   61      | tydec_one . tydec

    TYPE  shift, and go to state 28

    TYPE      [reduce using rule 60 (tydec)]
    $default  reduce using rule 60 (tydec)

    tydec      go to state 74
    tydec_one  go to state 34


State 35

   52 decs_nonempty_s: fundec .

    $default  reduce using rule 52 (decs_nonempty_s)


State 36

   70 fundec: fundec_one .
   71       | fundec_one . fundec

    FUNCTION  shift, and go to state 26

    FUNCTION  [reduce using rule 70 (fundec)]
    $default  reduce using rule 70 (fundec)

    fundec      go to state 75
    fundec_one  go to state 36


State 37

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   19    | MINUS exp .

    $default  reduce using rule 19 (exp)


State 38

    0 $accept: program $end .

    $default  accept


State 39

   17 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 76
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 40

   18 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 77
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 41

   11 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 78
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 42

   12 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 79
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 43

   13 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 80
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 44

   14 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 81
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 45

   15 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 82
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 46

   16 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 83
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 47

    7 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 84
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 48

    8 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 85
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 49

    9 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 86
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 50

   10 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 87
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 51

   22 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 88
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 52

   43 oneormore: oneormore LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 89
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 53

   42 oneormore: oneormore DOT . ID

    ID  shift, and go to state 90


State 54

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   34 nonemptyactuals: exp .
   35                | exp . COMMA nonemptyactuals

    COMMA   shift, and go to state 91
    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    $default  reduce using rule 34 (nonemptyactuals)


State 55

    6 exp: ID LPAREN actuals . RPAREN

    RPAREN  shift, and go to state 92


State 56

   33 actuals: nonemptyactuals .

    $default  reduce using rule 33 (actuals)


State 57

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   29    | ID LBRACK exp . RBRACK OF exp
   46 one: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 93
    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50


State 58

   59 rec_one: ID . EQ exp

    EQ  shift, and go to state 94


State 59

   20 exp: ID LBRACE rec . RBRACE

    RBRACE  shift, and go to state 95


State 60

   56 rec: rec_nonempty .

    $default  reduce using rule 56 (rec)


State 61

   57 rec_nonempty: rec_one .
   58             | rec_one . COMMA rec_nonempty

    COMMA  shift, and go to state 96

    $default  reduce using rule 57 (rec_nonempty)


State 62

   45 one: ID DOT ID .

    $default  reduce using rule 45 (one)


State 63

   36 sequencing: exp SEMICOLON . sequencing_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    $default  reduce using rule 39 (sequencing_exps)

    exp              go to state 97
    sequencing_exps  go to state 98
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16


State 64

   30 exp: LPAREN exp RPAREN .

    $default  reduce using rule 30 (exp)


State 65

   21 exp: LPAREN sequencing RPAREN .

    $default  reduce using rule 21 (exp)


State 66

   23 exp: IF exp THEN . exp
   24    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 99
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 67

   25 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 100
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 68

   26 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 101
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 69

   72 fundec_one: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   73           | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 102


State 70

   53 vardec: VAR ID . ASSIGN exp
   54       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 103
    ASSIGN  shift, and go to state 104


State 71

   62 tydec_one: TYPE ID . EQ ty

    EQ  shift, and go to state 105


State 72

   28 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    $default  reduce using rule 39 (sequencing_exps)

    exp              go to state 97
    expseq           go to state 106
    sequencing_exps  go to state 107
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16


State 73

   49 decs_nonempty: decs_nonempty_s decs .

    $default  reduce using rule 49 (decs_nonempty)


State 74

   61 tydec: tydec_one tydec .

    $default  reduce using rule 61 (tydec)


State 75

   71 fundec: fundec_one fundec .

    $default  reduce using rule 71 (fundec)


State 76

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   17    | exp AND exp .
   18    | exp . OR exp

    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    $default  reduce using rule 17 (exp)


State 77

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   18    | exp OR exp .

    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    $default  reduce using rule 18 (exp)


State 78

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   11    | exp EQ exp .
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp

    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 11 (exp)


State 79

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   12    | exp NEQ exp .
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp

    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 12 (exp)


State 80

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   13    | exp LT exp .
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp

    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 13 (exp)


State 81

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   14    | exp LE exp .
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp

    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


State 82

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   15    | exp GT exp .
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp

    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


State 83

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   16    | exp GE exp .
   17    | exp . AND exp
   18    | exp . OR exp

    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


State 84

    7 exp: exp . PLUS exp
    7    | exp PLUS exp .
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp

    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    $default  reduce using rule 7 (exp)


State 85

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    8    | exp MINUS exp .
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp

    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    $default  reduce using rule 8 (exp)


State 86

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
    9    | exp TIMES exp .
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp

    $default  reduce using rule 9 (exp)


State 87

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   10    | exp DIVIDE exp .
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp

    $default  reduce using rule 10 (exp)


State 88

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   22    | lvalue ASSIGN exp .

    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    AND       [reduce using rule 22 (exp)]
    OR        [reduce using rule 22 (exp)]
    EQ        [reduce using rule 22 (exp)]
    NEQ       [reduce using rule 22 (exp)]
    LT        [reduce using rule 22 (exp)]
    LE        [reduce using rule 22 (exp)]
    GT        [reduce using rule 22 (exp)]
    GE        [reduce using rule 22 (exp)]
    PLUS      [reduce using rule 22 (exp)]
    MINUS     [reduce using rule 22 (exp)]
    TIMES     [reduce using rule 22 (exp)]
    DIVIDE    [reduce using rule 22 (exp)]
    $default  reduce using rule 22 (exp)


State 89

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   43 oneormore: oneormore LBRACK exp . RBRACK

    RBRACK  shift, and go to state 108
    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50


State 90

   42 oneormore: oneormore DOT ID .

    $default  reduce using rule 42 (oneormore)


State 91

   35 nonemptyactuals: exp COMMA . nonemptyactuals

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp              go to state 54
    nonemptyactuals  go to state 109
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16


State 92

    6 exp: ID LPAREN actuals RPAREN .

    $default  reduce using rule 6 (exp)


State 93

   29 exp: ID LBRACK exp RBRACK . OF exp
   46 one: ID LBRACK exp RBRACK .

    OF  shift, and go to state 110

    $default  reduce using rule 46 (one)


State 94

   59 rec_one: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 111
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 95

   20 exp: ID LBRACE rec RBRACE .

    $default  reduce using rule 20 (exp)


State 96

   58 rec_nonempty: rec_one COMMA . rec_nonempty

    ID  shift, and go to state 58

    rec_nonempty  go to state 112
    rec_one       go to state 61


State 97

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   37 sequencing_exps: exp .
   38                | exp . SEMICOLON sequencing_exps

    SEMICOLON  shift, and go to state 113
    AND        shift, and go to state 39
    OR         shift, and go to state 40
    EQ         shift, and go to state 41
    NEQ        shift, and go to state 42
    LT         shift, and go to state 43
    LE         shift, and go to state 44
    GT         shift, and go to state 45
    GE         shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    TIMES      shift, and go to state 49
    DIVIDE     shift, and go to state 50

    $default  reduce using rule 37 (sequencing_exps)


State 98

   36 sequencing: exp SEMICOLON sequencing_exps .

    $default  reduce using rule 36 (sequencing)


State 99

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   23    | IF exp THEN exp .
   24    | IF exp THEN exp . ELSE exp

    ELSE    shift, and go to state 114
    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    ELSE      [reduce using rule 23 (exp)]
    AND       [reduce using rule 23 (exp)]
    OR        [reduce using rule 23 (exp)]
    EQ        [reduce using rule 23 (exp)]
    NEQ       [reduce using rule 23 (exp)]
    LT        [reduce using rule 23 (exp)]
    LE        [reduce using rule 23 (exp)]
    GT        [reduce using rule 23 (exp)]
    GE        [reduce using rule 23 (exp)]
    PLUS      [reduce using rule 23 (exp)]
    MINUS     [reduce using rule 23 (exp)]
    TIMES     [reduce using rule 23 (exp)]
    DIVIDE    [reduce using rule 23 (exp)]
    $default  reduce using rule 23 (exp)


State 100

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   25    | WHILE exp DO exp .

    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    AND       [reduce using rule 25 (exp)]
    OR        [reduce using rule 25 (exp)]
    EQ        [reduce using rule 25 (exp)]
    NEQ       [reduce using rule 25 (exp)]
    LT        [reduce using rule 25 (exp)]
    LE        [reduce using rule 25 (exp)]
    GT        [reduce using rule 25 (exp)]
    GE        [reduce using rule 25 (exp)]
    PLUS      [reduce using rule 25 (exp)]
    MINUS     [reduce using rule 25 (exp)]
    TIMES     [reduce using rule 25 (exp)]
    DIVIDE    [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


State 101

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   26    | FOR ID ASSIGN exp . TO exp DO exp

    TO      shift, and go to state 115
    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50


State 102

   72 fundec_one: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   73           | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 116

    $default  reduce using rule 63 (tyfields)

    tyfields           go to state 117
    tyfields_nonempty  go to state 118


State 103

   54 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 119


State 104

   53 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 120
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 105

   62 tydec_one: TYPE ID EQ . ty

    ID      shift, and go to state 121
    LBRACE  shift, and go to state 122
    ARRAY   shift, and go to state 123

    ty  go to state 124


State 106

   28 exp: LET decs IN expseq . END

    END  shift, and go to state 125


State 107

   31 expseq: sequencing_exps .

    $default  reduce using rule 31 (expseq)


State 108

   43 oneormore: oneormore LBRACK exp RBRACK .

    $default  reduce using rule 43 (oneormore)


State 109

   35 nonemptyactuals: exp COMMA nonemptyactuals .

    $default  reduce using rule 35 (nonemptyactuals)


State 110

   29 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 126
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 111

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   59 rec_one: ID EQ exp .

    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    $default  reduce using rule 59 (rec_one)


State 112

   58 rec_nonempty: rec_one COMMA rec_nonempty .

    $default  reduce using rule 58 (rec_nonempty)


State 113

   38 sequencing_exps: exp SEMICOLON . sequencing_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    $default  reduce using rule 39 (sequencing_exps)

    exp              go to state 97
    sequencing_exps  go to state 127
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16


State 114

   24 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 128
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 115

   26 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 129
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 116

   65 tyfields_nonempty: ID . COLON ID
   66                  | ID . COLON ID COMMA tyfields_nonempty

    COLON  shift, and go to state 130


State 117

   72 fundec_one: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   73           | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 131


State 118

   64 tyfields: tyfields_nonempty .

    $default  reduce using rule 64 (tyfields)


State 119

   54 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 132


State 120

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   53 vardec: VAR ID ASSIGN exp .

    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    $default  reduce using rule 53 (vardec)


State 121

   67 ty: ID .

    $default  reduce using rule 67 (ty)


State 122

   68 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 116

    $default  reduce using rule 63 (tyfields)

    tyfields           go to state 133
    tyfields_nonempty  go to state 118


State 123

   69 ty: ARRAY . OF ID

    OF  shift, and go to state 134


State 124

   62 tydec_one: TYPE ID EQ ty .

    $default  reduce using rule 62 (tydec_one)


State 125

   28 exp: LET decs IN expseq END .

    $default  reduce using rule 28 (exp)


State 126

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   29    | ID LBRACK exp RBRACK OF exp .

    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    AND       [reduce using rule 29 (exp)]
    OR        [reduce using rule 29 (exp)]
    EQ        [reduce using rule 29 (exp)]
    NEQ       [reduce using rule 29 (exp)]
    LT        [reduce using rule 29 (exp)]
    LE        [reduce using rule 29 (exp)]
    GT        [reduce using rule 29 (exp)]
    GE        [reduce using rule 29 (exp)]
    PLUS      [reduce using rule 29 (exp)]
    MINUS     [reduce using rule 29 (exp)]
    TIMES     [reduce using rule 29 (exp)]
    DIVIDE    [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)


State 127

   38 sequencing_exps: exp SEMICOLON sequencing_exps .

    $default  reduce using rule 38 (sequencing_exps)


State 128

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   24    | IF exp THEN exp ELSE exp .

    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    AND       [reduce using rule 24 (exp)]
    OR        [reduce using rule 24 (exp)]
    EQ        [reduce using rule 24 (exp)]
    NEQ       [reduce using rule 24 (exp)]
    LT        [reduce using rule 24 (exp)]
    LE        [reduce using rule 24 (exp)]
    GT        [reduce using rule 24 (exp)]
    GE        [reduce using rule 24 (exp)]
    PLUS      [reduce using rule 24 (exp)]
    MINUS     [reduce using rule 24 (exp)]
    TIMES     [reduce using rule 24 (exp)]
    DIVIDE    [reduce using rule 24 (exp)]
    $default  reduce using rule 24 (exp)


State 129

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   26    | FOR ID ASSIGN exp TO exp . DO exp

    DO      shift, and go to state 135
    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50


State 130

   65 tyfields_nonempty: ID COLON . ID
   66                  | ID COLON . ID COMMA tyfields_nonempty

    ID  shift, and go to state 136


State 131

   72 fundec_one: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   73           | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 137
    EQ     shift, and go to state 138


State 132

   54 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 139
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 133

   68 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 140


State 134

   69 ty: ARRAY OF . ID

    ID  shift, and go to state 141


State 135

   26 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 142
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 136

   65 tyfields_nonempty: ID COLON ID .
   66                  | ID COLON ID . COMMA tyfields_nonempty

    COMMA  shift, and go to state 143

    $default  reduce using rule 65 (tyfields_nonempty)


State 137

   73 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 144


State 138

   72 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 145
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 139

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   54 vardec: VAR ID COLON ID ASSIGN exp .

    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    $default  reduce using rule 54 (vardec)


State 140

   68 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 68 (ty)


State 141

   69 ty: ARRAY OF ID .

    $default  reduce using rule 69 (ty)


State 142

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   26    | FOR ID ASSIGN exp TO exp DO exp .

    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    AND       [reduce using rule 26 (exp)]
    OR        [reduce using rule 26 (exp)]
    EQ        [reduce using rule 26 (exp)]
    NEQ       [reduce using rule 26 (exp)]
    LT        [reduce using rule 26 (exp)]
    LE        [reduce using rule 26 (exp)]
    GT        [reduce using rule 26 (exp)]
    GE        [reduce using rule 26 (exp)]
    PLUS      [reduce using rule 26 (exp)]
    MINUS     [reduce using rule 26 (exp)]
    TIMES     [reduce using rule 26 (exp)]
    DIVIDE    [reduce using rule 26 (exp)]
    $default  reduce using rule 26 (exp)


State 143

   66 tyfields_nonempty: ID COLON ID COMMA . tyfields_nonempty

    ID  shift, and go to state 116

    tyfields_nonempty  go to state 146


State 144

   73 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 147


State 145

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   72 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    $default  reduce using rule 72 (fundec_one)


State 146

   66 tyfields_nonempty: ID COLON ID COMMA tyfields_nonempty .

    $default  reduce using rule 66 (tyfields_nonempty)


State 147

   73 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    NIL     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 148
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 148

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | exp . EQ exp
   12    | exp . NEQ exp
   13    | exp . LT exp
   14    | exp . LE exp
   15    | exp . GT exp
   16    | exp . GE exp
   17    | exp . AND exp
   18    | exp . OR exp
   73 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    AND     shift, and go to state 39
    OR      shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    TIMES   shift, and go to state 49
    DIVIDE  shift, and go to state 50

    $default  reduce using rule 73 (fundec_one)
